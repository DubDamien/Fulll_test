#!/usr/bin/env php
<?php

require __DIR__ . '/../vendor/autoload.php';

use Fulll\App\Handler\ParkVehicleHandler;
use Fulll\App\Handler\RegisterVehicleHandler;
use Fulll\App\Command\ParkVehicleCommand;
use Fulll\App\Command\RegisterVehicleCommand;
use Fulll\Domain\Entity\Fleet;
use Fulll\Infra\Repository\FleetRepository;
use Symfony\Component\Console\Application;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

$application = new Application();

$fleetRepository = new FleetRepository();

$application->register('create')
    ->addArgument('userId', InputArgument::REQUIRED, 'The user ID')
    ->setCode(function (InputInterface $input, OutputInterface $output) use ($fleetRepository) {
        $userId = $input->getArgument('userId');
        $fleet = new Fleet($userId);
        $fleetRepository->save($fleet);
        $output->writeln($fleet->getId());
    });

$application->register('register-vehicle')
    ->addArgument('fleetId', InputArgument::REQUIRED, 'The fleet ID')
    ->addArgument('vehiclePlateNumber', InputArgument::REQUIRED, 'The vehicle plate number')
    ->setCode(function (InputInterface $input, OutputInterface $output) use ($fleetRepository) {
        $handler = new RegisterVehicleHandler($fleetRepository);
        $handler->handle(new RegisterVehicleCommand(
            $input->getArgument('fleetId'),
            $input->getArgument('vehiclePlateNumber')
        ));
    });

$application->register('localize-vehicle')
    ->addArgument('fleetId', InputArgument::REQUIRED, 'The fleet ID')
    ->addArgument('vehiclePlateNumber', InputArgument::REQUIRED, 'The vehicle plate number')
    ->addArgument('lat', InputArgument::REQUIRED, 'Latitude')
    ->addArgument('lng', InputArgument::REQUIRED, 'Longitude')
    ->addArgument('alt', InputArgument::OPTIONAL, 'Altitude')
    ->setCode(function (InputInterface $input, OutputInterface $output) use ($fleetRepository) {
        $handler = new ParkVehicleHandler($fleetRepository);
        $handler->handle(new ParkVehicleCommand(
            $input->getArgument('fleetId'),
            $input->getArgument('vehiclePlateNumber'),
            (float) $input->getArgument('lat'),
            (float) $input->getArgument('lng'),
            $input->getArgument('alt') ? (float) $input->getArgument('alt') : null
        ));
    });

$application->run();